{"version":3,"sources":["firebase.js","screens/styles.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ChatScreen.js","screens/HomeScreen.js","screens/AddRoomScreen.js","App.js"],"names":["db","firebase","apps","length","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","app","firestore","auth","styles","StyleSheet","create","container","flex","alignItems","padding","button","width","marginTop","error","color","LoginScreen","navigation","useState","email","setEmail","password","setPassword","errorMessage","setErrorMessage","View","style","placeholder","label","leftIcon","type","name","value","onChangeText","text","secureTextEntry","title","onPress","signInWithEmailAndPassword","then","replace","catch","message","navigate","Text","RegisterScreen","setName","imageUrl","setImageUrl","useEffect","onAuthStateChanged","user","createUserWithEmailAndPassword","userCredential","console","log","updateProfile","displayName","photoURL","ChatScreen","messages","setMessages","signOut","useLayoutEffect","setOptions","headerLeft","marginLeft","rounded","source","uri","currentUser","headerRight","TouchableOpacity","marginRight","AntDesign","size","onSend","useCallback","previousMessages","GiftedChat","append","_id","createdAt","collection","add","orderBy","onSnapshot","snapshot","docs","map","doc","data","toDate","showAvatarForEveryMessage","avatar","HomeScreen","AddRoomScreen","justifyContent","goBack","Stack","createStackNavigator","ModalStack","ChatApp","Navigator","Screen","component","App","NavigationContainer","mode","headerMode"],"mappings":"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","file":"static/js/app.a2bb50fe.chunk.js","sourcesContent":["import firebase from \"firebase/app\"\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyBXiYlPJNIU0Gge9uy6ursp7uQKPS90vQo\",\r\n    authDomain: \"gifted-chat-a5d6d.firebaseapp.com\",\r\n    projectId: \"gifted-chat-a5d6d\",\r\n    storageBucket: \"gifted-chat-a5d6d.appspot.com\",\r\n    messagingSenderId: \"1076931133196\",\r\n    appId: \"1:1076931133196:web:6198f6a1875e3236f71329\",\r\n    measurementId: \"G-L63YE5HFT6\"\r\n};\r\n\r\nlet app;\r\n\r\nif (firebase.apps.length === 0) {\r\n    app = firebase.initializeApp(firebaseConfig);\r\n} else {\r\n    app = firebase.app();\r\n}\r\n\r\nconst db = app.firestore();\r\nconst auth = firebase.auth();\r\n\r\nexport { db, auth };","import { StyleSheet } from 'react-native'\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        padding: 10\r\n    },\r\n    button: {\r\n        width: 200,\r\n        marginTop: 10\r\n    },\r\n    error: {\r\n        color: 'red'\r\n    }\r\n})\r\n\r\nexport default styles;","    \r\nimport React, { useState } from 'react'\r\nimport { View, Text } from 'react-native'\r\nimport { Input, Button } from 'react-native-elements'\r\nimport { auth } from '../firebase'\r\nimport styles from './styles'\r\n\r\nconst LoginScreen = ({ navigation }) => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    const signIn = () => {\r\n        auth.signInWithEmailAndPassword(email, password).then(() => \r\n            navigation.replace('Chat')\r\n        ).catch((error) => {\r\n            setErrorMessage(error.message)\r\n        });\r\n    }\r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Input\r\n                placeholder='Enter your email'\r\n                label='Email'\r\n                leftIcon={{ type: 'material', name: 'email' }}\r\n                value={email}\r\n                onChangeText={text => setEmail(text)}\r\n                />\r\n            <Input\r\n                placeholder='Enter your password'\r\n                label='Password'\r\n                leftIcon={{ type: 'material', name: 'lock' }}\r\n                value={password}\r\n                onChangeText={text => setPassword(text)}\r\n                secureTextEntry\r\n                />\r\n            <Button title=\"login\" style={styles.button} onPress={signIn} />\r\n            <Button title=\"register\" style={styles.button} onPress={() => navigation.navigate('Register')} />\r\n            <Text style={styles.error}>{errorMessage}</Text>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default LoginScreen\r\n","    \r\nimport React, { useState, useEffect } from 'react'\r\nimport { View, Text } from 'react-native'\r\nimport { Input, Button } from 'react-native-elements'\r\nimport { auth } from '../firebase'\r\nimport styles from './styles'\r\n\r\nconst RegisterScreen = ({ navigation }) => {\r\n    const [name, setName] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [imageUrl, setImageUrl] = useState('');\r\n    const [errorMessage, setErrorMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        const unsubscribe = auth.onAuthStateChanged(function (user) {\r\n            if (user) {\r\n                navigation.replace('Chat');\r\n            } else {\r\n                // No user is signed in.\r\n            }\r\n        });\r\n        return unsubscribe;\r\n    }, [])\r\n\r\n    const register = () => {\r\n        auth.createUserWithEmailAndPassword(email, password)\r\n        .then((userCredential) => {\r\n            // Signed in \r\n            const user = userCredential.user;\r\n            console.log(\"signed in\")\r\n            user.updateProfile({\r\n                displayName: name,\r\n                photoURL: imageUrl ? imageUrl : \"https://www.trackergps.com/canvas/images/icons/avatar.jpg\"\r\n            }).catch(function (error) {\r\n                setErrorMessage(error.message)\r\n            });\r\n            navigation.replace('Chat')\r\n        })\r\n        .catch((error) => {\r\n            setErrorMessage(error.message)\r\n        });   \r\n    }\r\n    return (\r\n        <View style={styles.container}>\r\n            <Input\r\n                placeholder='Enter your name'\r\n                label='Name'\r\n                leftIcon={{ type: 'material', name: 'badge' }}\r\n                value={name}\r\n                onChangeText={text => setName(text)}\r\n                />\r\n            <Input\r\n                placeholder='Enter your email'\r\n                label='Email'\r\n                leftIcon={{ type: 'material', name: 'email' }}\r\n                value={email}\r\n                onChangeText={text => setEmail(text)}\r\n                />\r\n            <Input\r\n                placeholder='Enter your password'\r\n                label='Password'\r\n                leftIcon={{ type: 'material', name: 'lock' }}\r\n                value={password}\r\n                onChangeText={text => setPassword(text)}\r\n                secureTextEntry\r\n                />\r\n            <Input\r\n                placeholder='Enter your image url'\r\n                label='Profile Picture'\r\n                leftIcon={{ type: 'material', name: 'face' }}\r\n                onChangeText={text => setImageUrl(text)}\r\n                />\r\n            <Button title=\"register\" style={styles.button} onPress={register} />\r\n            <Text style={styles.error}>{errorMessage}</Text>\r\n        </View>\r\n    )\r\n}\r\n\r\nexport default RegisterScreen","import React, { useState, useLayoutEffect, useCallback } from 'react'\r\nimport { View, TouchableOpacity  } from 'react-native'\r\nimport { Avatar } from 'react-native-elements';\r\nimport { AntDesign } from 'react-native-vector-icons'\r\nimport { GiftedChat } from 'react-native-gifted-chat';\r\nimport { db, auth } from '../firebase'\r\n\r\nconst ChatScreen = ({ navigation}) => {\r\n    const [messages, setMessages] = useState([]);\r\n\r\n    const signOut = () => {\r\n        auth.signOut().then(() => {\r\n          // Sign-out successful.\r\n          navigation.replace(\"Login\");\r\n        }).catch((error) => {\r\n          // An error happened.\r\n        });\r\n    }   \r\n    \r\n    useLayoutEffect(() => {\r\n        navigation.setOptions({\r\n            headerLeft: () => (\r\n                <View style={{ marginLeft: 20 }}>\r\n                    <Avatar\r\n                        rounded\r\n                        source={{\r\n                            uri: auth?.currentUser?.photoURL,\r\n                        }}\r\n                    />\r\n                </View>\r\n            ),\r\n            headerRight: () => (\r\n            <TouchableOpacity style={{\r\n                marginRight: 10\r\n                }}\r\n                onPress={signOut}\r\n            >\r\n                <AntDesign name=\"logout\" size={24} color=\"black\" />\r\n            </TouchableOpacity>\r\n            )\r\n        })\r\n        console.log(auth?.currentUser);\r\n    }, [navigation])\r\n\r\n    const onSend = useCallback((messages = []) => {\r\n      setMessages(previousMessages => GiftedChat.append(previousMessages, messages))\r\n      const {\r\n          _id,\r\n          createdAt,\r\n          text,\r\n          user,\r\n      } = messages[0]\r\n      db.collection('chats').add({\r\n        _id,\r\n        createdAt,\r\n        text,\r\n        user\r\n      })\r\n    }, [])\r\n    \r\n      \r\n    useLayoutEffect(() => {\r\n      const unsubscribe = db.collection('chats')\r\n        .orderBy('createdAt', 'desc')\r\n        .onSnapshot(snapshot => setMessages(\r\n          snapshot.docs.map(doc => ({\r\n            _id: doc.data()._id,\r\n            createdAt: doc.data().createdAt.toDate(),\r\n            text: doc.data().text,\r\n            user: doc.data().user,\r\n          }))\r\n        ));\r\n        return unsubscribe;\r\n     }, [])\r\n\r\n      return (\r\n        <GiftedChat\r\n          messages={messages}\r\n          showAvatarForEveryMessage={true}\r\n          onSend={messages => onSend(messages)}\r\n          user={{\r\n            _id: auth?.currentUser?.email,\r\n            name: auth?.currentUser?.displayName,\r\n            avatar: auth?.currentUser?.photoURL\r\n          }}\r\n        />\r\n      )\r\n}\r\nexport default ChatScreen","import React from 'react';\r\nimport { View, Text } from 'react-native';\r\n//import { Title } from 'react-native-paper';\r\nimport styles from './styles';\r\nimport { Button } from 'react-native-elements';\r\nimport { auth } from '../firebase'\r\n\r\nexport default function HomeScreen({ navigation }) {\r\n    const signOut = () => {\r\n        auth.signOut().then(() => {\r\n          // Sign-out successful.\r\n          navigation.replace(\"Login\");\r\n        }).catch((error) => {\r\n          // An error happened.\r\n        });\r\n    } \r\n\r\n    return (\r\n        <View style={styles.container}>\r\n            <Text>Home Screen</Text>\r\n            <Text>All chat rooms will be listed here</Text>\r\n            <Text>{auth?.currentUser?.displayName}</Text>\r\n            <Button title='Logout' style={styles.button} onPress={signOut} />\r\n            <Button title='Add Room' style={styles.button} onPress={() => navigation.navigate('AddRoom')} />\r\n        </View>\r\n    );\r\n}\r\n","import React from 'react';\r\nimport { View, Text } from 'react-native';\r\nimport { Button } from 'react-native-elements';\r\nimport styles from './styles'\r\n\r\nexport default function AddRoomScreen({ navigation }) {\r\n  return (\r\n    <View style={{ flex: 1, justifyContent: 'center', alignItems: 'center' }}>\r\n      <Text>Create a new chat room</Text>\r\n      <Button title=\"Close Modal\" style={styles.button} onPress={() => navigation.goBack()} />\r\n    </View>\r\n  );\r\n}","import React from 'react';\r\nimport { createStackNavigator } from '@react-navigation/stack';\r\nimport { NavigationContainer } from '@react-navigation/native';\r\nimport LoginScreen from './screens/LoginScreen';\r\nimport RegisterScreen from './screens/RegisterScreen';\r\nimport ChatScreen from './screens/ChatScreen';\r\nimport HomeScreen from './screens/HomeScreen';\r\nimport AddRoomScreen from './screens/AddRoomScreen';\r\n\r\nconst Stack = createStackNavigator();\r\nconst ModalStack = createStackNavigator();\r\n\r\nfunction ChatApp() {\r\n  return (\r\n    <Stack.Navigator >\r\n      <Stack.Screen name=\"Login\" component={LoginScreen} />\r\n      <Stack.Screen name=\"Register\" component={RegisterScreen} />\r\n      <Stack.Screen name=\"Chat\" component={ChatScreen} />\r\n      <Stack.Screen name=\"Home\" component={HomeScreen} />\r\n    </Stack.Navigator>\r\n  );\r\n}\r\n\r\nexport default function App() {\r\n  return (\r\n    <NavigationContainer>\r\n      <ModalStack.Navigator mode='modal' headerMode='none'>\r\n        <ModalStack.Screen name='ChatApp' component={ChatApp} />\r\n        <ModalStack.Screen name='AddRoom' component={AddRoomScreen} />\r\n      </ModalStack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n}"],"sourceRoot":""}